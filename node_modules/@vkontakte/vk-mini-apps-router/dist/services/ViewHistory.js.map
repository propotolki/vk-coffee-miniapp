{"version":3,"file":"ViewHistory.js","sourceRoot":"","sources":["../../src/services/ViewHistory.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action, AgnosticRouteMatch, RouterState } from '@remix-run/router';\nimport { getRouteContext } from '../utils/utils';\nimport { STATE_KEY_SHOW_POPOUT } from '../const';\nimport { ViewNavigationRecord } from './ViewNavigationRecord.type';\nimport { PageInternal } from '../type';\n\nexport class ViewHistory {\n  private history: ViewNavigationRecord[] = [];\n  private positionInternal = -1;\n\n  updateNavigation(state: RouterState): void {\n    const { match } = getRouteContext(state);\n\n    if (!match) {\n      return;\n    }\n\n    const record = this.createViewRecord(state, match);\n\n    switch (state.historyAction) {\n      case Action.Push:\n        this.push(record);\n        break;\n      case Action.Pop:\n        if (this.hasKey(state.location.key)) {\n          this.pop(state);\n        } else {\n          // В случае, если пользователь введет в адресную строку новый хэш, мы поймаем POP событие с новой локацией.\n          this.push(record);\n        }\n        break;\n      case Action.Replace:\n        this.replace(record);\n        break;\n    }\n  }\n\n  get isFirstPage(): boolean {\n    return this.positionInternal < 1;\n  }\n\n  get panelsHistory(): string[] {\n    if (this.history.length < 0) {\n      return [];\n    }\n    const currentView = this.history[this.positionInternal].view;\n    const reversedClone = this.history.slice(0, this.positionInternal + 1).reverse();\n    const rightLimit = reversedClone.findIndex((item) => item.view !== currentView);\n    const historyCopy = reversedClone\n      .slice(0, rightLimit > -1 ? rightLimit : reversedClone.length)\n      .filter((item) => !item.modal && !item.popout)\n      .reverse();\n\n    return historyCopy.map(({ panel }) => panel);\n  }\n\n  get position(): number {\n    return this.positionInternal;\n  }\n\n  get historyStack(): ViewNavigationRecord[] {\n    return this.history.map((item) => ({ ...item }));\n  }\n\n  isPopForward(historyAction: Action, key: string): boolean {\n    const newPosition = this.history.findIndex(({ locationKey }) => locationKey === key);\n    return historyAction === Action.Pop && newPosition > this.position;\n  }\n\n  isPopBackward(historyAction: Action, key: string): boolean {\n    const newPosition = this.history.findIndex(({ locationKey }) => locationKey === key);\n    return historyAction === Action.Pop && newPosition <= this.position;\n  }\n\n  resetHistory() {\n    this.positionInternal = -1;\n    this.history = [];\n  }\n\n  private push(record: ViewNavigationRecord): void {\n    this.history = this.history.slice(0, this.positionInternal + 1);\n    this.history.push(record);\n    this.positionInternal = this.history.length - 1;\n    record.position = this.position;\n  }\n\n  private replace(record: ViewNavigationRecord): void {\n    this.history[this.position] = record;\n    record.position = this.position;\n  }\n\n  private pop(state: RouterState): void {\n    this.positionInternal = this.history.findIndex(\n      ({ locationKey }) => locationKey === state.location.key,\n    );\n  }\n\n  private hasKey(key: string): boolean {\n    return Boolean(this.history.find(({ locationKey }) => locationKey === key));\n  }\n\n  private createViewRecord(\n    state: RouterState,\n    match: AgnosticRouteMatch<string, PageInternal>,\n  ): ViewNavigationRecord {\n    const { route, params } = match;\n\n    return {\n      position: -1,\n      path: state.location.pathname,\n      state: state.location.state,\n      params,\n      root: 'root' in route ? route.root : undefined,\n      view: route.view,\n      panel: route.panel,\n      modal: 'modal' in route ? route.modal : undefined,\n      tab: route.tab,\n      popout: state.location.state?.[STATE_KEY_SHOW_POPOUT],\n      locationKey: state.location.key,\n    };\n  }\n}\n"]}