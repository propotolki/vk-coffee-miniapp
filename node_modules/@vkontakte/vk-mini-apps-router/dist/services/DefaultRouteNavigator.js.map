{"version":3,"file":"DefaultRouteNavigator.js","sourceRoot":"","sources":["../../src/services/DefaultRouteNavigator.ts"],"names":[],"mappings":"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","sourcesContent":["import { BlockerFunction, Params, Router, RouterNavigateOptions } from '@remix-run/router';\nimport {\n  createKey,\n  getParamKeys,\n  extractPathFromNavigationTarget,\n  getPathFromTo,\n  isModalShown,\n  isPopoutShown,\n  invariant,\n} from '../utils/utils';\nimport {\n  NAVIGATION_BLOCKER_KEY,\n  STATE_KEY_BLOCK_FORWARD_NAVIGATION,\n  STATE_KEY_SHOW_MODAL,\n  STATE_KEY_SHOW_POPOUT,\n} from '../const';\nimport {\n  NavigationOptions,\n  NavigationTarget,\n  RouteNavigator,\n  NavigationState,\n} from './RouteNavigator.type';\nimport { buildPanelPathFromModalMatch } from '../utils/buildPanelPathFromModalMatch';\nimport { InternalRouteConfig, ModalWithRoot } from '../type';\nimport { ViewHistory } from './ViewHistory';\nimport { TransactionExecutor } from './TransactionExecutor';\nimport { NavigationTransaction } from '../entities/NavigationTransaction';\n\nexport class DefaultRouteNavigator implements RouteNavigator {\n  private readonly router: Router;\n  private readonly setPopout: (popout: JSX.Element | null) => void;\n  private blockers: Map<string, BlockerFunction> = new Map();\n  private blockerId = 0;\n\n  constructor(\n    router: Router,\n    private viewHistory: ViewHistory,\n    setPopout: (popout: JSX.Element | null) => void,\n  ) {\n    this.router = router;\n    this.setPopout = setPopout;\n  }\n\n  public async push(\n    to: NavigationTarget,\n    paramsOrOptions: Params | NavigationOptions = {},\n    options: NavigationOptions = {},\n  ): Promise<void> {\n    const { preparedOptions, preparedParams } = this.parseParams(to, paramsOrOptions, options);\n    const fullOptions = {\n      ...preparedOptions,\n      replace: Boolean(this.router.state.location.state?.[STATE_KEY_BLOCK_FORWARD_NAVIGATION]),\n    };\n\n    await this.navigate(to, fullOptions, preparedParams);\n  }\n\n  public async replace(\n    to: NavigationTarget,\n    paramsOrOptions: Params | NavigationOptions = {},\n    options: NavigationOptions = {},\n  ): Promise<void> {\n    const { preparedOptions, preparedParams } = this.parseParams(to, paramsOrOptions, options);\n\n    await this.navigate(to, { ...preparedOptions, replace: true }, preparedParams);\n  }\n\n  public async back(to = 1): Promise<void> {\n    if (to === 0) {\n      return;\n    }\n    await this.go(-Math.abs(to));\n  }\n\n  public async backToFirst(): Promise<void> {\n    if (this.viewHistory.position > 0) {\n      await this.go(-this.viewHistory.position);\n    } else {\n      await TransactionExecutor.doNext();\n    }\n  }\n\n  public async go(to: number): Promise<void> {\n    if (to === 0) {\n      await TransactionExecutor.doNext();\n    } else {\n      await this.router.navigate(to);\n    }\n  }\n\n  public runSync(actions: VoidFunction[]): Promise<void> {\n    const transaction = new NavigationTransaction(actions);\n    TransactionExecutor.add(transaction);\n    TransactionExecutor.doNext();\n    return transaction.donePromise;\n  }\n\n  public async showModal(id: string, options?: { state?: NavigationState }): Promise<void> {\n    await this.router.navigate(this.router.state.location, {\n      state: {\n        ...options?.state,\n        [STATE_KEY_SHOW_MODAL]: id,\n        [STATE_KEY_BLOCK_FORWARD_NAVIGATION]: true,\n      },\n      replace: isModalShown(this.router.state.location),\n    });\n  }\n\n  public async hideModal(pushPanel = false, options?: { replace: boolean }): Promise<void> {\n    if ((!pushPanel && !this.viewHistory.isFirstPage) || isModalShown(this.router.state.location)) {\n      return await this.router.navigate(-1);\n    }\n    const modalMatch = this.router.state.matches.find((match) => 'modal' in match.route);\n\n    if (modalMatch) {\n      const route = modalMatch.route as ModalWithRoot & InternalRouteConfig;\n      const path = buildPanelPathFromModalMatch(modalMatch, this.router);\n\n      invariant(\n        path,\n        `There is no route registered for panel with ${\n          route.root ? `root: ${route.root} ` : ''\n        }, view: ${route.view}, panel: ${\n          route.panel\n        }. Make sure this route exists or use hideModal with pushPanel set to false.`,\n      );\n\n      return await this.navigate(path, {\n        keepSearchParams: true,\n        replace: Boolean(options?.replace),\n      });\n    }\n    await TransactionExecutor.doNext();\n  }\n\n  public async showPopout(popout: JSX.Element): Promise<void> {\n    this.setPopout(popout);\n    const state: any = {\n      [STATE_KEY_SHOW_POPOUT]: createKey(),\n      [STATE_KEY_BLOCK_FORWARD_NAVIGATION]: true,\n    };\n    if (isModalShown(this.router.state.location)) {\n      state[STATE_KEY_SHOW_MODAL] = this.router.state.location.state[STATE_KEY_SHOW_MODAL];\n    }\n    const replace =\n      isModalShown(this.router.state.location) || isPopoutShown(this.router.state.location);\n    await this.router.navigate(this.router.state.location, { state, replace });\n  }\n\n  public async hidePopout(): Promise<void> {\n    if (isPopoutShown(this.router.state.location)) {\n      this.setPopout(null);\n      if (isModalShown(this.router.state.location)) {\n        await this.router.navigate(this.router.state.location, {\n          state: {\n            [STATE_KEY_BLOCK_FORWARD_NAVIGATION]: true,\n            [STATE_KEY_SHOW_MODAL]: this.router.state.location.state[STATE_KEY_SHOW_MODAL],\n          },\n          replace: true,\n        });\n      } else {\n        await this.router.navigate(-1);\n      }\n    } else {\n      await TransactionExecutor.doNext();\n    }\n  }\n\n  public block(blocker: BlockerFunction) {\n    const key = (++this.blockerId).toString();\n    const onLeave: BlockerFunction = (data) => {\n      return Array.from(this.blockers.values()).some((fn) => fn(data));\n    };\n\n    this.blockers.set(key, blocker);\n    this.router.getBlocker(NAVIGATION_BLOCKER_KEY, onLeave);\n\n    return () => {\n      this.blockers.delete(key);\n    };\n  }\n\n  private async navigate(\n    to: NavigationTarget,\n    opts?: RouterNavigateOptions & NavigationOptions,\n    params: Params = {},\n  ): Promise<void> {\n    let path = getPathFromTo({ to, params, defaultPathname: this.router.state.location.pathname });\n    const newUrl = new URL(path, window.location.origin);\n\n    if (opts?.keepSearchParams) {\n      const currentSearchParams = new URLSearchParams(this.router.state.location.search);\n      const newSearchParams = new URLSearchParams(newUrl.search);\n\n      currentSearchParams.forEach((value, key) => {\n        if (!newSearchParams.has(key)) {\n          newSearchParams.set(key, value);\n        }\n      });\n\n      newUrl.search = newSearchParams.toString();\n      path = newUrl.pathname + (newUrl.search ? `${newUrl.search}` : '');\n    }\n\n    await this.router.navigate(path, opts);\n  }\n\n  private validateOptions({ state, keepSearchParams }: NavigationOptions = {}) {\n    const invalidState = state && typeof state !== 'object';\n    const invalidKeepSearchParams = keepSearchParams && typeof keepSearchParams !== 'boolean';\n\n    if (invalidState || invalidKeepSearchParams) {\n      console.warn('Invalid navigate options type');\n      return {};\n    }\n    return { state, keepSearchParams };\n  }\n\n  private parseParams(\n    to: NavigationTarget,\n    paramsOrOptions: Params | NavigationOptions = {},\n    options: NavigationOptions = {},\n  ) {\n    const path = extractPathFromNavigationTarget(to);\n\n    if (getParamKeys(path).length) {\n      return {\n        preparedParams: paramsOrOptions as Params,\n        preparedOptions: this.validateOptions(options),\n      };\n    }\n\n    return { preparedParams: {}, preparedOptions: this.validateOptions(paramsOrOptions) };\n  }\n}\n"]}