import { Params } from '@remix-run/router';
import { ModalWithRoot } from '../type';
type RequireOnlyOne<T, Keys extends keyof T = keyof T> = Pick<T, Exclude<keyof T, Keys>> & {
    [K in Keys]-?: Required<Pick<T, K>> & Partial<Record<Exclude<Keys, K>, undefined>>;
}[Keys];
type AnimatedParts = Pick<ModalWithRoot, 'tab' | 'panel' | 'modal'>;
type NavId = RequireOnlyOne<AnimatedParts>;
export declare function useParams<T extends string = string>(id?: NavId): Params<T> | undefined;
export {};
//# sourceMappingURL=useParams.d.ts.map