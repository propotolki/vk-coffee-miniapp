{"version":3,"sources":["../../../src/components/CalendarRange/utils.ts"],"sourcesContent":["import * as React from 'react';\nimport { isSameDate } from '@vkontakte/vkjs';\nimport { isAfter, isBefore, isSameDay, isSameMonth, startOfMonth } from 'date-fns';\nimport { Keys, pressedKey } from '../../lib/accessibility';\nimport { navigateDate, NAVIGATION_KEYS } from '../../lib/calendar';\nimport { isHTMLElement } from '../../lib/dom';\nimport type { DateRangeType } from './types';\n\nexport function useCalendarKeyboardNavigation({\n  focusedDay,\n  value,\n  setFocusedDay,\n  viewDates: [firstCalendarViewDate, secondCalendarViewDate],\n  setViewDate,\n}: {\n  focusedDay: Date | undefined;\n  setViewDate: (date: Date) => void;\n  setFocusedDay: React.Dispatch<React.SetStateAction<Date | undefined>>;\n  viewDates: [Date, Date];\n  value: DateRangeType | null | undefined;\n}) {\n  // соотвествует дню, на котором можно сфокусироваться с помощью Tab\n  const [focusableDayOnFirstCalendar, setFocusableDayOnFirstCalendar] = React.useState<Date>();\n  const [focusableDayOnSecondCalendar, setFocusableDayOnSecondCalendar] = React.useState<Date>();\n\n  const handleCalendarKeyDown = React.useCallback(\n    (event: React.KeyboardEvent, isFirst: boolean) => {\n      const key = pressedKey(event);\n      if (!key) {\n        return;\n      }\n\n      if (NAVIGATION_KEYS.includes(key)) {\n        event.preventDefault();\n\n        const newFocusedDay = navigateDate(focusedDay ?? value?.[0], key);\n\n        if (\n          newFocusedDay &&\n          !isSameMonth(newFocusedDay, firstCalendarViewDate) &&\n          !isSameMonth(newFocusedDay, secondCalendarViewDate)\n        ) {\n          setViewDate(newFocusedDay);\n        }\n\n        if (isFirst) {\n          if (isSameMonth(newFocusedDay, firstCalendarViewDate)) {\n            setFocusableDayOnFirstCalendar(newFocusedDay);\n          } else if (isAfter(newFocusedDay, firstCalendarViewDate)) {\n            setFocusableDayOnSecondCalendar(newFocusedDay);\n          }\n        } else {\n          if (isSameMonth(newFocusedDay, secondCalendarViewDate)) {\n            setFocusableDayOnSecondCalendar(newFocusedDay);\n          } else if (isBefore(newFocusedDay, secondCalendarViewDate)) {\n            setFocusableDayOnFirstCalendar(newFocusedDay);\n          }\n        }\n\n        setFocusedDay(newFocusedDay);\n\n        return;\n      }\n\n      if (key === Keys.TAB) {\n        setFocusedDay(undefined);\n        if (isFirst) {\n          setFocusableDayOnFirstCalendar(focusedDay);\n        } else {\n          setFocusableDayOnSecondCalendar(focusedDay);\n        }\n\n        return;\n      }\n\n      if ((key === Keys.ENTER || key === Keys.SPACE) && isHTMLElement(event.target)) {\n        event.preventDefault();\n        event.target.click?.();\n      }\n    },\n    [focusedDay, value, firstCalendarViewDate, secondCalendarViewDate, setFocusedDay, setViewDate],\n  );\n\n  const handleFirstCalendarKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      handleCalendarKeyDown(event, true);\n    },\n    [handleCalendarKeyDown],\n  );\n\n  const handleSecondCalendarKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      handleCalendarKeyDown(event, false);\n    },\n    [handleCalendarKeyDown],\n  );\n\n  const handleDayFocus = React.useCallback(\n    (value: Date) => {\n      if (\n        isSameMonth(firstCalendarViewDate, value) &&\n        (!focusableDayOnFirstCalendar || !isSameDate(focusableDayOnFirstCalendar, value))\n      ) {\n        setFocusableDayOnFirstCalendar(value);\n      }\n      if (\n        isSameMonth(secondCalendarViewDate, value) &&\n        (!focusableDayOnSecondCalendar || !isSameDate(focusableDayOnSecondCalendar, value))\n      ) {\n        setFocusableDayOnSecondCalendar(value);\n      }\n    },\n    [\n      firstCalendarViewDate,\n      focusableDayOnFirstCalendar,\n      focusableDayOnSecondCalendar,\n      secondCalendarViewDate,\n    ],\n  );\n\n  return {\n    focusableDayOnFirstCalendar,\n    focusableDayOnSecondCalendar,\n    handleFirstCalendarKeyDown,\n    handleSecondCalendarKeyDown,\n    handleDayFocus,\n  };\n}\n\n/**\n * Возвращает функцию, которая позволяет проверить является ли день в календаре днём на который\n * можно попасть с помощью Tab.\n * Единственный день в таблице календаря у которого есть tabIndex=\"0\"\n * Чтобы на него можно было попасть из заголовка календаря.\n */\nexport function useIsDayFocusable({\n  value,\n  focusableDayOnFirstCalendar,\n  focusableDayOnSecondCalendar,\n  viewDate,\n  isDayActive,\n}: {\n  value: DateRangeType | null | undefined;\n  focusableDayOnFirstCalendar: Date | undefined;\n  focusableDayOnSecondCalendar: Date | undefined;\n  viewDate: Date;\n  isDayActive: (date: Date) => boolean;\n}) {\n  const isValueVisibleOnCalendar = Boolean(\n    value &&\n      ((value[0] && isSameMonth(value[0], viewDate)) ||\n        (value[1] && isSameMonth(value[1], viewDate))),\n  );\n\n  const isCalendarHasFocusableDay = Boolean(\n    (focusableDayOnFirstCalendar && isSameMonth(focusableDayOnFirstCalendar, viewDate)) ||\n      (focusableDayOnSecondCalendar && isSameMonth(focusableDayOnSecondCalendar, viewDate)),\n  );\n\n  const isDayFocusable = React.useCallback(\n    (day: Date) => {\n      // если focusableDay день находится среди дней открытого сейчас месяца, то такой день получит tabIndex=\"0\",\n      if (isCalendarHasFocusableDay) {\n        return Boolean(\n          (focusableDayOnFirstCalendar && isSameDay(focusableDayOnFirstCalendar, day)) ||\n            (focusableDayOnSecondCalendar && isSameDay(focusableDayOnSecondCalendar, day)),\n        );\n      }\n\n      // при открытии календаря focusableDay не определён,\n      // поэтому tabIndex=\"0\" будет у дня, соответствующего дню в инпуте\n      if (isValueVisibleOnCalendar) {\n        return isDayActive(day);\n      }\n\n      // при переключении месяца любая навигация с помощью Tab начинается\n      // с первого дня месяца.\n      return isSameDay(startOfMonth(viewDate), day);\n    },\n    [\n      isCalendarHasFocusableDay,\n      isValueVisibleOnCalendar,\n      viewDate,\n      isDayActive,\n      focusableDayOnFirstCalendar,\n      focusableDayOnSecondCalendar,\n    ],\n  );\n  return isDayFocusable;\n}\n"],"names":["React","isSameDate","isAfter","isBefore","isSameDay","isSameMonth","startOfMonth","Keys","pressedKey","navigateDate","NAVIGATION_KEYS","isHTMLElement","useCalendarKeyboardNavigation","focusedDay","value","setFocusedDay","viewDates","firstCalendarViewDate","secondCalendarViewDate","setViewDate","focusableDayOnFirstCalendar","setFocusableDayOnFirstCalendar","useState","focusableDayOnSecondCalendar","setFocusableDayOnSecondCalendar","handleCalendarKeyDown","useCallback","event","isFirst","key","includes","preventDefault","newFocusedDay","TAB","undefined","ENTER","SPACE","target","click","handleFirstCalendarKeyDown","handleSecondCalendarKeyDown","handleDayFocus","useIsDayFocusable","viewDate","isDayActive","isValueVisibleOnCalendar","Boolean","isCalendarHasFocusableDay","isDayFocusable","day"],"mappings":"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"}