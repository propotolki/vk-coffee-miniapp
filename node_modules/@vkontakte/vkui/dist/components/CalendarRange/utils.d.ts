import * as React from 'react';
import type { DateRangeType } from './types';
export declare function useCalendarKeyboardNavigation({ focusedDay, value, setFocusedDay, viewDates: [firstCalendarViewDate, secondCalendarViewDate], setViewDate, }: {
    focusedDay: Date | undefined;
    setViewDate: (date: Date) => void;
    setFocusedDay: React.Dispatch<React.SetStateAction<Date | undefined>>;
    viewDates: [Date, Date];
    value: DateRangeType | null | undefined;
}): {
    focusableDayOnFirstCalendar: Date | undefined;
    focusableDayOnSecondCalendar: Date | undefined;
    handleFirstCalendarKeyDown: (event: React.KeyboardEvent) => void;
    handleSecondCalendarKeyDown: (event: React.KeyboardEvent) => void;
    handleDayFocus: (value: Date) => void;
};
/**
 * Возвращает функцию, которая позволяет проверить является ли день в календаре днём на который
 * можно попасть с помощью Tab.
 * Единственный день в таблице календаря у которого есть tabIndex="0"
 * Чтобы на него можно было попасть из заголовка календаря.
 */
export declare function useIsDayFocusable({ value, focusableDayOnFirstCalendar, focusableDayOnSecondCalendar, viewDate, isDayActive, }: {
    value: DateRangeType | null | undefined;
    focusableDayOnFirstCalendar: Date | undefined;
    focusableDayOnSecondCalendar: Date | undefined;
    viewDate: Date;
    isDayActive: (date: Date) => boolean;
}): (day: Date) => boolean;
//# sourceMappingURL=utils.d.ts.map