import * as React from 'react';
import type { HasDataAttribute, HasRef, HasRootRef } from '../../types';
import type { TappableOmitProps } from '../Tappable/Tappable';
import { RadioInput } from './RadioInput/RadioInput';
export interface RadioProps extends React.InputHTMLAttributes<HTMLInputElement>, HasRef<HTMLInputElement>, HasRootRef<HTMLLabelElement>, Pick<TappableOmitProps, 'hoverMode' | 'activeMode' | 'hasHover' | 'hasActive' | 'focusVisibleMode'> {
    /**
     * Дополнительное описание под основным текстом.
     */
    description?: React.ReactNode;
    /**
     * Элемент после основного текста.
     */
    titleAfter?: React.ReactNode;
    /**
     * Позволяет передавать data-* аттрибуты элементу label.
     **/
    labelProps?: HasDataAttribute;
}
/**
 * @see https://vkui.io/components/radio
 */
export declare const Radio: {
    ({ children, description, style, className, getRootRef, titleAfter, getRef, labelProps, hoverMode, activeMode, hasHover, hasActive, focusVisibleMode, ...restProps }: RadioProps): React.ReactNode;
    Input: typeof RadioInput;
};
//# sourceMappingURL=Radio.d.ts.map