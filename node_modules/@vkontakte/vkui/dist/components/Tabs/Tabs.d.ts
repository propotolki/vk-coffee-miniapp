import * as React from 'react';
import type { HTMLAttributesWithRootRef } from '../../types';
export interface TabsProps extends HTMLAttributesWithRootRef<HTMLDivElement> {
    /**
     * Режим отображения компонента.
     */
    mode?: 'default' | 'accent' | 'secondary';
    /**
     * Включает прокрутку контейнера до активной (`selected`) вкладки.
     * @since 5.10.0
     */
    withScrollToSelectedTab?: boolean;
    /**
     * Отвечает за горизонтальное выравнивание при прокрутке до активной вкладки.
     * @see [scrollIntoView](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView)
     * @since 5.10.0
     */
    scrollBehaviorToSelectedTab?: ScrollIntoViewOptions['inline'];
    /**
     * При `auto` ширина вкладок определяется контекстом:
     *  - равномерно занимают всю доступную ширину при вложении в `HorizontalScroll`
     *  - равномерно занимают всю доступную ширину при `mode=default` и platform !== 'VKCOM'
     * При `stretched` и `shrinked` вкладки либо равномерно занимают всю ширину,
     * либо выравниваются по контенту соответственно.
     */
    layoutFillMode?: 'auto' | 'stretched' | 'shrinked';
    /**
     * Идентификатор выбранной вкладки. Чтобы свойство работало корректно, у каждого `TabsItem` должно быть прокинуто свойство `id`.
     */
    selectedId?: string;
    /**
     * Идентификатор выбранной вкладки по умолчанию. Чтобы свойство работало корректно, у каждого `TabsItem` должно быть прокинуто свойство `id`.
     */
    defaultSelectedId?: string;
    /**
     * Обработчик изменения выбранной вкладки. Чтобы свойство работало корректно, у каждого `TabsItem` должно быть прокинуто свойство `id`.
     */
    onSelectedIdChange?: (id: string) => void;
}
/**
 * @see https://vkui.io/components/tabs
 */
export declare const Tabs: ({ children, mode, role, withScrollToSelectedTab, scrollBehaviorToSelectedTab, layoutFillMode, selectedId, defaultSelectedId, onSelectedIdChange, ...restProps }: TabsProps) => React.ReactNode;
//# sourceMappingURL=Tabs.d.ts.map