{"version":3,"sources":["../../../src/components/ScreenSpinner/ScreenSpinnerContainer.tsx"],"sourcesContent":["import { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { ScreenSpinnerContext } from './context';\nimport { type ScreenSpinnerProps } from './types';\nimport styles from './ScreenSpinner.module.css';\nimport stylesDelay from '../../styles/animationVisibilityDelay.module.css';\n\nconst stateClassNames = {\n  cancelable: styles.stateCancelable,\n  done: styles.stateDone,\n  error: styles.stateError,\n  custom: styles.stateCustom,\n};\n\nconst modeClassNames = {\n  shadow: styles.modeShadow,\n  overlay: styles.modeOverlay,\n};\n\ntype ScreenSpinnerContainerProps = HTMLAttributesWithRootRef<HTMLSpanElement> &\n  Pick<ScreenSpinnerProps, 'state' | 'mode' | 'label' | 'customIcon' | 'visibilityDelay'>;\n\nexport const ScreenSpinnerContainer = ({\n  state = 'loading',\n  mode = 'shadow',\n  customIcon,\n  label,\n  children,\n  visibilityDelay,\n  ...restProps\n}: ScreenSpinnerContainerProps) => {\n  return (\n    <ScreenSpinnerContext.Provider value={{ state, label, customIcon }}>\n      <RootComponent\n        baseClassName={classNames(\n          styles.host,\n          modeClassNames[mode],\n          state !== 'loading' && stateClassNames[state],\n          hasReactNode(label) && styles.hasLabel,\n          visibilityDelay && stylesDelay.visibilityDelay,\n        )}\n        {...restProps}\n      >\n        <div className={styles.iconSlot}>{children}</div>\n        {hasReactNode(label) && (\n          <Footnote className={styles.label} aria-hidden>\n            {label}\n          </Footnote>\n        )}\n      </RootComponent>\n    </ScreenSpinnerContext.Provider>\n  );\n};\n"],"names":["classNames","hasReactNode","RootComponent","Footnote","ScreenSpinnerContext","stateClassNames","cancelable","done","error","custom","modeClassNames","shadow","overlay","ScreenSpinnerContainer","state","mode","customIcon","label","children","visibilityDelay","restProps","Provider","value","baseClassName","div","className","aria-hidden"],"mappings":";;;;AAAA,SAASA,UAAU,EAAEC,YAAY,QAAQ,kBAAkB;AAE3D,SAASC,aAAa,QAAQ,oCAAiC;AAC/D,SAASC,QAAQ,QAAQ,qCAAkC;AAC3D,SAASC,oBAAoB,QAAQ,eAAY;AAKjD,MAAMC,kBAAkB;IACtBC,UAAU;IACVC,IAAI;IACJC,KAAK;IACLC,MAAM;AACR;AAEA,MAAMC,iBAAiB;IACrBC,MAAM;IACNC,OAAO;AACT;AAKA,OAAO,MAAMC,yBAAyB;QAAC,EACrCC,QAAQ,SAAS,EACjBC,OAAO,QAAQ,EACfC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,eAAe,EAEa,WADzBC;QANHN;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,qBACE,KAACf,qBAAqBiB,QAAQ;QAACC,OAAO;YAAER;YAAOG;YAAOD;QAAW;kBAC/D,cAAA,MAACd;YACCqB,eAAevB,sCAEbU,cAAc,CAACK,KAAK,EACpBD,UAAU,aAAaT,eAAe,CAACS,MAAM,EAC7Cb,aAAagB,yCACbE;WAEEC;;8BAEJ,KAACI;oBAAIC,SAAS;8BAAoBP;;gBACjCjB,aAAagB,wBACZ,KAACd;oBAASsB,SAAS;oBAAgBC,aAAW;8BAC3CT;;;;;AAMb,EAAE"}