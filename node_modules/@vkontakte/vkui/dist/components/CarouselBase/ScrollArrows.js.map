{"version":3,"sources":["../../../src/components/CarouselBase/ScrollArrows.tsx"],"sourcesContent":["'use client';\n/* eslint-disable jsdoc/require-jsdoc */\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { ScrollArrow } from '../ScrollArrow/ScrollArrow';\nimport { type BaseGalleryProps } from './types';\nimport styles from './CarouselBase.module.css';\n\nconst stylesArrowAreaHeight = {\n  stretch: styles.arrowAreaStretch,\n  fit: styles.arrowAreaFit,\n};\n\nexport const getArrowClassName = (\n  side: 'start' | 'end',\n  arrowAreaHeight: Exclude<BaseGalleryProps['arrowAreaHeight'], undefined>,\n) => {\n  return classNames(\n    styles.arrow,\n    side === 'start' ? styles.arrowStart : styles.arrowEnd,\n    stylesArrowAreaHeight[arrowAreaHeight],\n  );\n};\n\nexport interface ScrollArrowsTestIds {\n  /**\n   * Передает атрибут `data-testid` для кнопки перехода к следующему слайду.\n   */\n  nextArrowTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для кнопки перехода к предыдущему слайду.\n   */\n  prevArrowTestId?: string;\n}\n\ninterface ScrollArrowsProps\n  extends Pick<\n      BaseGalleryProps,\n      'showArrows' | 'arrowSize' | 'arrowAreaHeight' | 'arrowPrevLabel' | 'arrowNextLabel'\n    >,\n    ScrollArrowsTestIds {\n  hasPointer?: boolean;\n  canSlideLeft: boolean;\n  canSlideRight: boolean;\n  onSlideLeft: (e: React.MouseEvent) => void;\n  onSlideRight: (e: React.MouseEvent) => void;\n}\n\nexport const ScrollArrows = ({\n  hasPointer,\n  canSlideLeft,\n  canSlideRight,\n  onSlideRight,\n  onSlideLeft,\n  showArrows = false,\n  arrowSize = 'm',\n  arrowAreaHeight = 'stretch',\n  arrowPrevLabel,\n  arrowNextLabel,\n  nextArrowTestId,\n  prevArrowTestId,\n}: ScrollArrowsProps) => {\n  return showArrows && hasPointer ? (\n    <>\n      {canSlideLeft && (\n        <ScrollArrow\n          className={getArrowClassName('start', arrowAreaHeight)}\n          direction=\"left\"\n          onClick={onSlideLeft}\n          size={arrowSize}\n          data-testid={prevArrowTestId}\n          label={arrowPrevLabel}\n        />\n      )}\n      {canSlideRight && (\n        <ScrollArrow\n          className={getArrowClassName('end', arrowAreaHeight)}\n          direction=\"right\"\n          onClick={onSlideRight}\n          size={arrowSize}\n          data-testid={nextArrowTestId}\n          label={arrowNextLabel}\n        />\n      )}\n    </>\n  ) : null;\n};\n"],"names":["React","classNames","ScrollArrow","stylesArrowAreaHeight","stretch","fit","getArrowClassName","side","arrowAreaHeight","ScrollArrows","hasPointer","canSlideLeft","canSlideRight","onSlideRight","onSlideLeft","showArrows","arrowSize","arrowPrevLabel","arrowNextLabel","nextArrowTestId","prevArrowTestId","className","direction","onClick","size","data-testid","label"],"mappings":"AAAA;;AACA,sCAAsC,GAEtC,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,gCAA6B;AAIzD,MAAMC,wBAAwB;IAC5BC,OAAO;IACPC,GAAG;AACL;AAEA,OAAO,MAAMC,oBAAoB,CAC/BC,MACAC;IAEA,OAAOP,sCAELM,SAAS,yEACTJ,qBAAqB,CAACK,gBAAgB;AAE1C,EAAE;AA0BF,OAAO,MAAMC,eAAe,CAAC,EAC3BC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,WAAW,EACXC,aAAa,KAAK,EAClBC,YAAY,GAAG,EACfR,kBAAkB,SAAS,EAC3BS,cAAc,EACdC,cAAc,EACdC,eAAe,EACfC,eAAe,EACG;IAClB,OAAOL,cAAcL,2BACnB;;YACGC,8BACC,KAACT;gBACCmB,WAAWf,kBAAkB,SAASE;gBACtCc,WAAU;gBACVC,SAAST;gBACTU,MAAMR;gBACNS,eAAaL;gBACbM,OAAOT;;YAGVL,+BACC,KAACV;gBACCmB,WAAWf,kBAAkB,OAAOE;gBACpCc,WAAU;gBACVC,SAASV;gBACTW,MAAMR;gBACNS,eAAaN;gBACbO,OAAOR;;;SAIX;AACN,EAAE"}